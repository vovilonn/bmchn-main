"use strict";

jQuery(function ($) {
  $(document).ready(function () {
    $("video[autoplay]").each(function () {
      this.play();
    });
    if (innerWidth > 1024) {
      var mainSlider = new Swiper('.main-slider .swiper-container', {
        direction: 'vertical',
        effect: 'fade',
        mousewheel: true,
        slidesPerView: 1,
        pagination: {
          el: '.swiper-pagination',
          clickable: true
        },
        on: {
          slideChange: function slideChange() {
            var index_currentSlide = this.realIndex;
            $('.js-main-slider-tabs li button').removeClass('active');
            $('.js-main-slider-tabs li button[data-slide-index=' + (index_currentSlide + 1) + ']').addClass('active');
          }
        }
      });
      $('.js-main-slider-tabs li button').click(function () {
        var index = $(this).attr('data-slide-index');
        $('.js-main-slider-tabs li button').removeClass('active');
        $(this).addClass('active');
        $('.main-slider .swiper-pagination-bullet:nth-child(' + index + ')').click();
      });
    }
    $('.js-nav-open').click(function () {
      $(this).toggleClass('active');
      $('.js-header-nav').toggleClass('active');
    });
    $('.js-services-popup-opener').click(function () {
      var index = $(this).attr('data-tab-index');
      $('.js-services-popup').addClass('active');
      $('.js-services-popup-nav button, .js-services-popup-container').removeClass('active');
      $('.js-services-popup-nav button[data-tab-index="' + index + '"]').addClass('active');
      $('.js-services-popup-container[data-tab-index="' + index + '"]').addClass('active');
    });
    $('.js-services-popup-nav button').click(function () {
      var index = $(this).attr('data-tab-index');
      $('.js-services-popup-nav button, .js-services-popup-container').removeClass('active');
      $('.js-services-popup-nav button[data-tab-index="' + index + '"]').addClass('active');
      $('.js-services-popup-container[data-tab-index="' + index + '"]').addClass('active');
    });
    $('.js-services-popup-close').click(function () {
      $('.js-services-popup').removeClass('active');
    });
    $('.js-store-tabs button').click(function () {
      var index = $(this).attr('data-store-slider-index');
      $('.js-store-tabs button, .js-store-slider').removeClass('active');
      $('.js-store-slider[data-store-slider-index="' + index + '"]').addClass('active');
      $('.js-store-tabs button[data-store-slider-index="' + index + '"]').addClass('active');
    });
    var storeSliders = $('.js-store-slider');
    if (storeSliders.length) {
      storeSliders.each(function () {
        var index = $(this).attr('data-store-slider-index');
        var storeSlider = new Swiper('.js-store-slider[data-store-slider-index="' + index + '"] .swiper-container', {
          direction: 'horizontal',
          mousewheel: false,
          slidesPerView: 1.8,
          spaceBetween: 12,
          pagination: false,
          navigation: {
            nextEl: '.js-store-slider[data-store-slider-index="' + index + '"] .js-store-slider-next',
            prevEl: '.js-store-slider[data-store-slider-index="' + index + '"] .js-store-slider-prev'
          },
          breakpoints: {
            768: {
              slidesPerView: 4
            }
          }
        });
      });
    }
    var teamSlider = new Swiper('.js-team-slider .swiper-container', {
      direction: 'horizontal',
      mousewheel: false,
      slidesPerView: 1.1,
      spaceBetween: 12,
      pagination: false,
      navigation: {
        nextEl: '.js-team-slider-next',
        prevEl: '.js-team-slider-prev'
      },
      breakpoints: {
        768: {
          slidesPerView: 3
        }
      }
    });
    $(window).on('scroll', function () {
      var st = $(window).scrollTop();
      var section = $('.biomachine-future');
      var sectionST = section.offset().top;
      var sectionHeight = section.height();
      var windowHeight = $(window).height();
      var point = sectionST + sectionHeight - windowHeight;
      if (st >= point) {
        $('.footer').addClass('--visible');
        $('.biomachine-string__bg').addClass('--visible');
        $('.js-page-nav').addClass('--hidden');
      } else {
        $('.biomachine-string__bg').removeClass('--visible');
        $('.footer').removeClass('--visible');
        $('.js-page-nav').removeClass('--hidden');
      }
    });
    $(window).on('scroll', function () {
      var st = $(window).scrollTop();
      var section = $('.js-store-section');
      var sectionST = section.offset().top;
      var point = sectionST - 400;
      if (st >= point) {
        section.removeClass('--inverted');
        $('.biomachine-promo.--last').addClass('--inverted');
      } else {
        section.addClass('--inverted');
        $('.biomachine-promo.--last').removeClass('--inverted');
      }
    });
    $('.biomachine-string__item').each(function () {
      var item = this;
      $(window).on('scroll', function () {
        var height = $(window).height();
        height = height - 150;
        var viewportOffset = item.getBoundingClientRect();
        var top = viewportOffset.top - height;
        if (top + 150 <= 0 && top + 150 >= -Math.abs(height / 2)) {
          var percent = top * 100 / height;
          percent = +Math.abs(percent);
          percent = Math.round(percent);
          var value = 0;
          value = percent * 2;
          $(item).css('opacity', value / 100);
          if (percent >= 40) {
            $(item).removeClass('--opacity');
          }
        }
        if (top + 150 <= -Math.abs(height / 2) && top + 150 >= -Math.abs(height)) {
          var _percent = top * 100 / height;
          _percent = +Math.abs(_percent);
          _percent = Math.round(_percent);
          var _value = 0;
          if (_percent >= 50 && _percent < 55) {
            _value = 0.9;
          } else if (_percent >= 55 && _percent < 60) {
            _value = 0.8;
          } else if (_percent >= 60 && _percent < 65) {
            _value = 0.7;
          } else if (_percent >= 65 && _percent < 70) {
            _value = 0.6;
          } else if (_percent >= 70 && _percent < 75) {
            _value = 0.5;
          } else if (_percent >= 75 && _percent < 80) {
            _value = 0.4;
          } else if (_percent >= 80 && _percent < 85) {
            _value = 0.3;
          } else if (_percent >= 85 && _percent < 90) {
            _value = 0.2;
          } else if (_percent >= 90 && _percent < 95) {
            _value = 0.1;
          } else if (_percent >= 90 && _percent < 100) {
            _value = 0;
          }
          if ($(item).hasClass('--last')) {
            $('.biomachine-string__bg').css('opacity', _value);
          }
          $(item).css('opacity', _value);
        }
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,