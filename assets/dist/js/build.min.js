"use strict";

jQuery(function ($) {
  $(document).ready(function () {
    $('.js-page-nav li a').click(function (e) {
      e.preventDefault();
      var index = $(this).attr('data-page-nav-index');
      $('.js-page-nav-popup').addClass('--active');
      $('.js-page-nav-popup .js-page-nav-inner[data-page-nav-index="' + index + '"]').addClass('--active');
    });
    $('.js-page-nav-popup .js-close').click(function () {
      $('.js-page-nav-popup, .js-page-nav-inner').removeClass('--active');
    });
    $("video[autoplay]").each(function () {
      this.play();
    });
    if (innerWidth > 1024) {
      var mainSlider = new Swiper('.main-slider .swiper-container', {
        direction: 'vertical',
        mousewheel: true,
        slidesPerView: 1,
        pagination: {
          el: '.swiper-pagination',
          clickable: true
        },
        on: {
          slideChange: function slideChange() {
            var index_currentSlide = this.realIndex;
            $('.js-main-slider-tabs li button').removeClass('active');
            $('.js-main-slider-tabs li button[data-slide-index=' + (index_currentSlide + 1) + ']').addClass('active');
          }
        }
      });
      $('.js-main-slider-tabs li button').click(function () {
        var index = $(this).attr('data-slide-index');
        $('.js-main-slider-tabs li button').removeClass('active');
        $(this).addClass('active');
        $('.main-slider .swiper-pagination-bullet:nth-child(' + index + ')').click();
      });
    }
    $('.js-nav-open').click(function () {
      $(this).toggleClass('active');
      $('.js-header-nav').toggleClass('active');
    });
    $('.js-services-popup-opener').click(function () {
      var index = $(this).attr('data-tab-index');
      $('.js-services-popup').addClass('active');
      $('.js-services-popup-nav button, .js-services-popup-container').removeClass('active');
      $('.js-services-popup-nav button[data-tab-index="' + index + '"]').addClass('active');
      $('.js-services-popup-container[data-tab-index="' + index + '"]').addClass('active');
    });
    $('.js-services-popup-nav button').click(function () {
      var index = $(this).attr('data-tab-index');
      $('.js-services-popup-nav button, .js-services-popup-container').removeClass('active');
      $('.js-services-popup-nav button[data-tab-index="' + index + '"]').addClass('active');
      $('.js-services-popup-container[data-tab-index="' + index + '"]').addClass('active');
    });
    $('.js-services-popup-close').click(function () {
      $('.js-services-popup').removeClass('active');
    });
    $('.js-store-tabs button').click(function () {
      var index = $(this).attr('data-store-slider-index');
      $('.js-store-tabs button, .js-store-slider').removeClass('active');
      $('.js-store-slider[data-store-slider-index="' + index + '"]').addClass('active');
      $('.js-store-tabs button[data-store-slider-index="' + index + '"]').addClass('active');
    });
    var storeSliders = $('.js-store-slider');
    if (storeSliders.length) {
      storeSliders.each(function () {
        var index = $(this).attr('data-store-slider-index');
        var storeSlider = new Swiper('.js-store-slider[data-store-slider-index="' + index + '"] .swiper-container', {
          direction: 'horizontal',
          mousewheel: false,
          slidesPerView: 1.8,
          spaceBetween: 12,
          pagination: false,
          navigation: {
            nextEl: '.js-store-slider[data-store-slider-index="' + index + '"] .js-store-slider-next',
            prevEl: '.js-store-slider[data-store-slider-index="' + index + '"] .js-store-slider-prev'
          },
          breakpoints: {
            768: {
              slidesPerView: 4
            }
          }
        });
      });
    }
    var teamSlider = new Swiper('.js-team-slider .swiper-container', {
      direction: 'horizontal',
      mousewheel: false,
      slidesPerView: 1.1,
      spaceBetween: 12,
      pagination: false,
      navigation: {
        nextEl: '.js-team-slider-next',
        prevEl: '.js-team-slider-prev'
      },
      breakpoints: {
        768: {
          slidesPerView: 3
        }
      }
    });
    $(window).on('scroll', function () {
      var st = $(window).scrollTop();
      var section = $('.biomachine-future');
      var sectionST = section.offset().top;
      var sectionHeight = section.height();
      var windowHeight = $(window).height();
      var point = sectionST + sectionHeight - windowHeight;
      if (st >= point) {
        $('.footer').addClass('--visible');
        $('.biomachine-string__bg').addClass('--visible');
        $('.js-page-nav').addClass('--hidden');
      } else {
        $('.biomachine-string__bg').removeClass('--visible');
        $('.footer').removeClass('--visible');
        $('.js-page-nav').removeClass('--hidden');
      }
    });
    $(window).on('scroll', function () {
      var st = $(window).scrollTop();
      var section = $('.js-store-section');
      var sectionST = section.offset().top;
      var point = sectionST - 400;
      if (st >= point) {
        section.removeClass('--inverted');
        $('.biomachine-promo.--last').addClass('--inverted');
      } else {
        section.addClass('--inverted');
        $('.biomachine-promo.--last').removeClass('--inverted');
      }
    });
    $('.biomachine-string__item').each(function () {
      var item = this;
      $(window).on('scroll', function () {
        var height = $(window).height();
        height = height - 150;
        var viewportOffset = item.getBoundingClientRect();
        var top = viewportOffset.top - height;
        if (top + 150 <= 0 && top + 150 >= -Math.abs(height / 2)) {
          var percent = top * 100 / height;
          percent = +Math.abs(percent);
          percent = Math.round(percent);
          var value = 0;
          value = percent * 2;
          $(item).css('opacity', value / 100);
          if (percent >= 40) {
            $(item).removeClass('--opacity');
          }
        }
        if (top + 150 <= -Math.abs(height / 2) && top + 150 >= -Math.abs(height)) {
          var _percent = top * 100 / height;
          _percent = +Math.abs(_percent);
          _percent = Math.round(_percent);
          var _value = 0;
          if (_percent >= 50 && _percent < 55) {
            _value = 0.9;
          } else if (_percent >= 55 && _percent < 60) {
            _value = 0.8;
          } else if (_percent >= 60 && _percent < 65) {
            _value = 0.7;
          } else if (_percent >= 65 && _percent < 70) {
            _value = 0.6;
          } else if (_percent >= 70 && _percent < 75) {
            _value = 0.5;
          } else if (_percent >= 75 && _percent < 80) {
            _value = 0.4;
          } else if (_percent >= 80 && _percent < 85) {
            _value = 0.3;
          } else if (_percent >= 85 && _percent < 90) {
            _value = 0.2;
          } else if (_percent >= 90 && _percent < 95) {
            _value = 0.1;
          } else if (_percent >= 90 && _percent < 100) {
            _value = 0;
          }
          if ($(item).hasClass('--last')) {
            $('.biomachine-string__bg').css('opacity', _value);
          }
          $(item).css('opacity', _value);
        }
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWwuanMiXSwibmFtZXMiOlsialF1ZXJ5IiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJjbGljayIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImluZGV4IiwiYXR0ciIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJlYWNoIiwicGxheSIsImlubmVyV2lkdGgiLCJtYWluU2xpZGVyIiwiU3dpcGVyIiwiZGlyZWN0aW9uIiwibW91c2V3aGVlbCIsInNsaWRlc1BlclZpZXciLCJwYWdpbmF0aW9uIiwiZWwiLCJjbGlja2FibGUiLCJvbiIsInNsaWRlQ2hhbmdlIiwiaW5kZXhfY3VycmVudFNsaWRlIiwicmVhbEluZGV4IiwidG9nZ2xlQ2xhc3MiLCJzdG9yZVNsaWRlcnMiLCJsZW5ndGgiLCJzdG9yZVNsaWRlciIsInNwYWNlQmV0d2VlbiIsIm5hdmlnYXRpb24iLCJuZXh0RWwiLCJwcmV2RWwiLCJicmVha3BvaW50cyIsInRlYW1TbGlkZXIiLCJ3aW5kb3ciLCJzdCIsInNjcm9sbFRvcCIsInNlY3Rpb24iLCJzZWN0aW9uU1QiLCJvZmZzZXQiLCJ0b3AiLCJzZWN0aW9uSGVpZ2h0IiwiaGVpZ2h0Iiwid2luZG93SGVpZ2h0IiwicG9pbnQiLCJpdGVtIiwidmlld3BvcnRPZmZzZXQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJNYXRoIiwiYWJzIiwicGVyY2VudCIsInJvdW5kIiwidmFsdWUiLCJjc3MiLCJoYXNDbGFzcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDLFVBQVVDLENBQUMsRUFBRTtFQUNoQkEsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLFlBQVk7SUFFMUJGLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDRyxLQUFLLENBQUMsVUFBVUMsQ0FBQyxFQUFFO01BQ3ZDQSxDQUFDLENBQUNDLGNBQWMsQ0FBQyxDQUFDO01BQ2pCLElBQUlDLEtBQUssR0FBR04sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDTyxJ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QUFJQSxRQUFPLEdBQUcsRUFBRSxFQUFFO1lBQ3RDRSxNQUFLLEdBQUcsR0FBRztVQUNmLENBQUMsTUFBTSxJQUFJRixRQUFPLElBQUksRUFBRSxJQUFJQSxRQUFPLEdBQUcsRUFBRSxFQUFFO1lBQ3RDRSxNQUFLLEdBQUcsR0FBRztVQUNmLENBQUMsTUFBTSxJQUFJRixRQUFPLElBQUksRUFBRSxJQUFJQSxRQUFPLEdBQUcsRUFBRSxFQUFFO1lBQ3RDRSxNQUFLLEdBQUcsR0FBRztVQUNmLENBQUMsTUFBTSxJQUFJRixRQUFPLElBQUksRUFBRSxJQUFJQSxRQUFPLEdBQUcsRUFBRSxFQUFFO1lBQ3RDRSxNQUFLLEdBQUcsR0FBRztVQUNmLENBQUMsTUFBTSxJQUFJRixRQUFPLElBQUksRUFBRSxJQUFJQSxRQUFPLEdBQUcsRUFBRSxFQUFFO1lBQ3RDRSxNQUFLLEdBQUcsR0FBRztVQUNmLENBQUMsTUFBTSxJQUFJRixRQUFPLElBQUksRUFBRSxJQUFJQSxRQUFPLEdBQUcsR0FBRyxFQUFFO1lBQ3ZDRSxNQUFLLEdBQUcsQ0FBQztVQUNiO1VBRUEsSUFBSXJELENBQUMsQ0FBQzhDLElBQUksQ0FBQyxDQUFDUyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDNUJ2RCxDQUFDLENBQUMsd0JBQXdCLENBQUMsQ0FBQ3NELEdBQUcsQ0FBQyxTQUFTLEVBQUVELE1BQUssQ0FBQztVQUNyRDtVQUVBckQsQ0FBQyxDQUFDOEMsSUFBSSxDQUFDLENBQUNRLEdBQUcsQ0FBQyxTQUFTLEVBQUVELE1BQUssQ0FBQztRQUNqQztNQUNKLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUVOLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImZpbGUiOiJidWlsZC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJqUXVlcnkoZnVuY3Rpb24gKCQpIHtcbiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgJCgnLmpzLXBhZ2UtbmF2IGxpIGEnKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBsZXQgaW5kZXggPSAkKHRoaXMpLmF0dHIoJ2RhdGEtcGFnZS1uYXYtaW5kZXgnKTtcbiAgICAgICAgICAgICQoJy5qcy1wYWdlLW5hdi1wb3B1cCcpLmFkZENsYXNzKCctLWFjdGl2ZScpO1xuICAgICAgICAgICAgJCgnLmpzLXBhZ2UtbmF2LXBvcHVwIC5qcy1wYWdlLW5hdi1pbm5lcltkYXRhLXBhZ2UtbmF2LWluZGV4PVwiJysgaW5kZXggKydcIl0nKS5hZGRDbGFzcygnLS1hY3RpdmUnKTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoJy5qcy1wYWdlLW5hdi1wb3B1cCAuanMtY2xvc2UnKS5jbGljayhmdW5jdGlvbiAoKXtcbiAgICAgICAgICAgICQoJy5qcy1wYWdlLW5hdi1wb3B1cCwgLmpzLXBhZ2UtbmF2LWlubmVyJykucmVtb3ZlQ2xhc3MoJy0tYWN0aXZlJyk7XG4gICAgICAgIH0pXG5cbiAgICAgICAgJChcInZpZGVvW2F1dG9wbGF5XVwiKS5lYWNoKGZ1bmN0aW9uKCl7IHRoaXMucGxheSgpOyB9KTtcblxuICAgICAgICBpZiAoaW5uZXJXaWR0aCA+IDEwMjQpIHtcbiAgICAgICAgICAgIGxldCBtYWluU2xpZGVyID0gbmV3IFN3aXBlcignLm1haW4tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyJywge1xuICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogJ3ZlcnRpY2FsJyxcbiAgICAgICAgICAgICAgICBtb3VzZXdoZWVsOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICBlbDogJy5zd2lwZXItcGFnaW5hdGlvbicsXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVDaGFuZ2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4X2N1cnJlbnRTbGlkZSA9IHRoaXMucmVhbEluZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmpzLW1haW4tc2xpZGVyLXRhYnMgbGkgYnV0dG9uJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmpzLW1haW4tc2xpZGVyLXRhYnMgbGkgYnV0dG9uW2RhdGEtc2xpZGUtaW5kZXg9JyArIChpbmRleF9jdXJyZW50U2xpZGUgKyAxKSArICddJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJCgnLmpzLW1haW4tc2xpZGVyLXRhYnMgbGkgYnV0dG9uJykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGxldCBpbmRleCA9ICQodGhpcykuYXR0cignZGF0YS1zbGlkZS1pbmRleCcpO1xuICAgICAgICAgICAgICAgICQoJy5qcy1tYWluLXNsaWRlci10YWJzIGxpIGJ1dHRvbicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAkKCcubWFpbi1zbGlkZXIgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldDpudGgtY2hpbGQoJyArIGluZGV4ICsgJyknKS5jbGljaygpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAkKCcuanMtbmF2LW9wZW4nKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICQoJy5qcy1oZWFkZXItbmF2JykudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKCcuanMtc2VydmljZXMtcG9wdXAtb3BlbmVyJykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IGluZGV4ID0gJCh0aGlzKS5hdHRyKCdkYXRhLXRhYi1pbmRleCcpO1xuICAgICAgICAgICAgJCgnLmpzLXNlcnZpY2VzLXBvcHVwJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgJCgnLmpzLXNlcnZpY2VzLXBvcHVwLW5hdiBidXR0b24sIC5qcy1zZXJ2aWNlcy1wb3B1cC1jb250YWluZXInKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAkKCcuanMtc2VydmljZXMtcG9wdXAtbmF2IGJ1dHRvbltkYXRhLXRhYi1pbmRleD1cIicgKyBpbmRleCArICdcIl0nKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAkKCcuanMtc2VydmljZXMtcG9wdXAtY29udGFpbmVyW2RhdGEtdGFiLWluZGV4PVwiJyArIGluZGV4ICsgJ1wiXScpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJCgnLmpzLXNlcnZpY2VzLXBvcHVwLW5hdiBidXR0b24nKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBsZXQgaW5kZXggPSAkKHRoaXMpLmF0dHIoJ2RhdGEtdGFiLWluZGV4Jyk7XG4gICAgICAgICAgICAkKCcuanMtc2VydmljZXMtcG9wdXAtbmF2IGJ1dHRvbiwgLmpzLXNlcnZpY2VzLXBvcHVwLWNvbnRhaW5lcicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICQoJy5qcy1zZXJ2aWNlcy1wb3B1cC1uYXYgYnV0dG9uW2RhdGEtdGFiLWluZGV4PVwiJyArIGluZGV4ICsgJ1wiXScpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICQoJy5qcy1zZXJ2aWNlcy1wb3B1cC1jb250YWluZXJbZGF0YS10YWItaW5kZXg9XCInICsgaW5kZXggKyAnXCJdJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKCcuanMtc2VydmljZXMtcG9wdXAtY2xvc2UnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKCcuanMtc2VydmljZXMtcG9wdXAnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoJy5qcy1zdG9yZS10YWJzIGJ1dHRvbicpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxldCBpbmRleCA9ICQodGhpcykuYXR0cignZGF0YS1zdG9yZS1zbGlkZXItaW5kZXgnKTtcbiAgICAgICAgICAgICQoJy5qcy1zdG9yZS10YWJzIGJ1dHRvbiwgLmpzLXN0b3JlLXNsaWRlcicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICQoJy5qcy1zdG9yZS1zbGlkZXJbZGF0YS1zdG9yZS1zbGlkZXItaW5kZXg9XCInICsgaW5kZXggKyAnXCJdJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgJCgnLmpzLXN0b3JlLXRhYnMgYnV0dG9uW2RhdGEtc3RvcmUtc2xpZGVyLWluZGV4PVwiJyArIGluZGV4ICsgJ1wiXScpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IHN0b3JlU2xpZGVycyA9ICQoJy5qcy1zdG9yZS1zbGlkZXInKTtcblxuICAgICAgICBpZiAoc3RvcmVTbGlkZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgc3RvcmVTbGlkZXJzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGxldCBpbmRleCA9ICQodGhpcykuYXR0cignZGF0YS1zdG9yZS1zbGlkZXItaW5kZXgnKTtcbiAgICAgICAgICAgICAgICBsZXQgc3RvcmVTbGlkZXIgPSBuZXcgU3dpcGVyKCcuanMtc3RvcmUtc2xpZGVyW2RhdGEtc3RvcmUtc2xpZGVyLWluZGV4PVwiJyArIGluZGV4ICsgJ1wiXSAuc3dpcGVyLWNvbnRhaW5lcicsIHtcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXG4gICAgICAgICAgICAgICAgICAgIG1vdXNld2hlZWw6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAxLjgsXG4gICAgICAgICAgICAgICAgICAgIHNwYWNlQmV0d2VlbjogMTIsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0RWw6ICcuanMtc3RvcmUtc2xpZGVyW2RhdGEtc3RvcmUtc2xpZGVyLWluZGV4PVwiJyArIGluZGV4ICsgJ1wiXSAuanMtc3RvcmUtc2xpZGVyLW5leHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldkVsOiAnLmpzLXN0b3JlLXNsaWRlcltkYXRhLXN0b3JlLXNsaWRlci1pbmRleD1cIicgKyBpbmRleCArICdcIl0gLmpzLXN0b3JlLXNsaWRlci1wcmV2J1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBicmVha3BvaW50czoge1xuICAgICAgICAgICAgICAgICAgICAgICAgNzY4OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogNCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHRlYW1TbGlkZXIgPSBuZXcgU3dpcGVyKCcuanMtdGVhbS1zbGlkZXIgLnN3aXBlci1jb250YWluZXInLCB7XG4gICAgICAgICAgICBkaXJlY3Rpb246ICdob3Jpem9udGFsJyxcbiAgICAgICAgICAgIG1vdXNld2hlZWw6IGZhbHNlLFxuICAgICAgICAgICAgc2xpZGVzUGVyVmlldzogMS4xLFxuICAgICAgICAgICAgc3BhY2VCZXR3ZWVuOiAxMixcbiAgICAgICAgICAgIHBhZ2luYXRpb246IGZhbHNlLFxuICAgICAgICAgICAgbmF2aWdhdGlvbjoge1xuICAgICAgICAgICAgICAgIG5leHRFbDogJy5qcy10ZWFtLXNsaWRlci1uZXh0JyxcbiAgICAgICAgICAgICAgICBwcmV2RWw6ICcuanMtdGVhbS1zbGlkZXItcHJldidcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBicmVha3BvaW50czoge1xuICAgICAgICAgICAgICAgIDc2ODoge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAzLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgICQod2luZG93KS5vbignc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IHN0ID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xuICAgICAgICAgICAgbGV0IHNlY3Rpb24gPSAkKCcuYmlvbWFjaGluZS1mdXR1cmUnKVxuICAgICAgICAgICAgbGV0IHNlY3Rpb25TVCA9IHNlY3Rpb24ub2Zmc2V0KCkudG9wO1xuICAgICAgICAgICAgbGV0IHNlY3Rpb25IZWlnaHQgPSBzZWN0aW9uLmhlaWdodCgpO1xuICAgICAgICAgICAgbGV0IHdpbmRvd0hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTtcbiAgICAgICAgICAgIGxldCBwb2ludCA9IChzZWN0aW9uU1QgKyBzZWN0aW9uSGVpZ2h0KSAtIHdpbmRvd0hlaWdodDtcblxuICAgICAgICAgICAgaWYgKHN0ID49IHBvaW50KSB7XG4gICAgICAgICAgICAgICAgJCgnLmZvb3RlcicpLmFkZENsYXNzKCctLXZpc2libGUnKTtcbiAgICAgICAgICAgICAgICAkKCcuYmlvbWFjaGluZS1zdHJpbmdfX2JnJykuYWRkQ2xhc3MoJy0tdmlzaWJsZScpO1xuICAgICAgICAgICAgICAgICQoJy5qcy1wYWdlLW5hdicpLmFkZENsYXNzKCctLWhpZGRlbicpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkKCcuYmlvbWFjaGluZS1zdHJpbmdfX2JnJykucmVtb3ZlQ2xhc3MoJy0tdmlzaWJsZScpO1xuICAgICAgICAgICAgICAgICQoJy5mb290ZXInKS5yZW1vdmVDbGFzcygnLS12aXNpYmxlJyk7XG4gICAgICAgICAgICAgICAgJCgnLmpzLXBhZ2UtbmF2JykucmVtb3ZlQ2xhc3MoJy0taGlkZGVuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQod2luZG93KS5vbignc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbGV0IHN0ID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xuICAgICAgICAgICAgbGV0IHNlY3Rpb24gPSAkKCcuanMtc3RvcmUtc2VjdGlvbicpXG4gICAgICAgICAgICBsZXQgc2VjdGlvblNUID0gc2VjdGlvbi5vZmZzZXQoKS50b3A7XG4gICAgICAgICAgICBsZXQgcG9pbnQgPSBzZWN0aW9uU1QgLSA0MDA7XG5cbiAgICAgICAgICAgIGlmIChzdCA+PSBwb2ludCkge1xuICAgICAgICAgICAgICAgIHNlY3Rpb24ucmVtb3ZlQ2xhc3MoJy0taW52ZXJ0ZWQnKTtcbiAgICAgICAgICAgICAgICAkKCcuYmlvbWFjaGluZS1wcm9tby4tLWxhc3QnKS5hZGRDbGFzcygnLS1pbnZlcnRlZCcpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWN0aW9uLmFkZENsYXNzKCctLWludmVydGVkJyk7XG4gICAgICAgICAgICAgICAgJCgnLmJpb21hY2hpbmUtcHJvbW8uLS1sYXN0JykucmVtb3ZlQ2xhc3MoJy0taW52ZXJ0ZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cblxuICAgICAgICAkKCcuYmlvbWFjaGluZS1zdHJpbmdfX2l0ZW0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxldCBpdGVtID0gdGhpcztcblxuICAgICAgICAgICAgJCh3aW5kb3cpLm9uKCdzY3JvbGwnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgbGV0IGhlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTtcbiAgICAgICAgICAgICAgICBoZWlnaHQgPSBoZWlnaHQgLSAxNTA7XG4gICAgICAgICAgICAgICAgbGV0IHZpZXdwb3J0T2Zmc2V0ID0gaXRlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgICAgICBsZXQgdG9wID0gdmlld3BvcnRPZmZzZXQudG9wIC0gaGVpZ2h0O1xuICAgICAgICAgICAgICAgIGlmICgodG9wICsgMTUwKSA8PSAwICYmICh0b3AgKyAxNTApID49IC1NYXRoLmFicyhoZWlnaHQgLyAyKSkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgcGVyY2VudCA9ICh0b3AgKiAxMDApIC8gaGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICBwZXJjZW50ID0gK01hdGguYWJzKHBlcmNlbnQpO1xuICAgICAgICAgICAgICAgICAgICBwZXJjZW50ID0gTWF0aC5yb3VuZChwZXJjZW50KTtcblxuICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSAwO1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHBlcmNlbnQgKiAyO1xuICAgICAgICAgICAgICAgICAgICAkKGl0ZW0pLmNzcygnb3BhY2l0eScsIHZhbHVlIC8gMTAwKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAocGVyY2VudCA+PSA0MCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJChpdGVtKS5yZW1vdmVDbGFzcygnLS1vcGFjaXR5Jyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoKHRvcCArIDE1MCkgPD0gLU1hdGguYWJzKGhlaWdodCAvIDIpICYmICh0b3AgKyAxNTApID49IC1NYXRoLmFicyhoZWlnaHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBwZXJjZW50ID0gKHRvcCAqIDEwMCkgLyBoZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIHBlcmNlbnQgPSArTWF0aC5hYnMocGVyY2VudCk7XG4gICAgICAgICAgICAgICAgICAgIHBlcmNlbnQgPSBNYXRoLnJvdW5kKHBlcmNlbnQpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSAwO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwZXJjZW50ID49IDUwICYmIHBlcmNlbnQgPCA1NSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSAwLjk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGVyY2VudCA+PSA1NSAmJiBwZXJjZW50IDwgNjApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gMC44O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHBlcmNlbnQgPj0gNjAgJiYgcGVyY2VudCA8IDY1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IDAuNztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50ID49IDY1ICYmIHBlcmNlbnQgPCA3MCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSAwLjY7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGVyY2VudCA+PSA3MCAmJiBwZXJjZW50IDwgNzUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gMC41O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHBlcmNlbnQgPj0gNzUgJiYgcGVyY2VudCA8IDgwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IDAuNDtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50ID49IDgwICYmIHBlcmNlbnQgPCA4NSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSAwLjM7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGVyY2VudCA+PSA4NSAmJiBwZXJjZW50IDwgOTApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gMC4yO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHBlcmNlbnQgPj0gOTAgJiYgcGVyY2VudCA8IDk1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IDAuMTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50ID49IDkwICYmIHBlcmNlbnQgPCAxMDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmICgkKGl0ZW0pLmhhc0NsYXNzKCctLWxhc3QnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmJpb21hY2hpbmUtc3RyaW5nX19iZycpLmNzcygnb3BhY2l0eScsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICQoaXRlbSkuY3NzKCdvcGFjaXR5JywgdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuXG4gICAgfSk7XG59KTsiXX0=